/** @file *//********************************************************************************************************

                                                     DataTree.cpp

						                    Copyright 2003, John J. Bolton
	--------------------------------------------------------------------------------------------------------------

	$Header: //depot/Roam/RoamTree/DataTree.cpp#1 $

	$NoKeywords: $

 ********************************************************************************************************************/

#include "DataTree.h"

#include "GridTriangle.h"

#include "Glx/Glx.h"


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::DataTree( GridTriangle const & gt, Glx::TLVertex * paVertexGrid, int size )
: m_paVertexGrid( paVertexGrid ), m_Size( size )
{
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node * DataTree::Root()
{
	return static_cast< Node * >( BinaryTree::Root() );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node const * DataTree::Root() const
{
	return static_cast< Node const * >( BinaryTree::Root() );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node * DataTree::FirstLeaf()
{
	return static_cast< Node * >( BinaryTree::FirstLeaf() );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node const * DataTree::FirstLeaf() const
{
	return static_cast< Node const * >( BinaryTree::FirstLeaf() );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node * DataTree::NextLeaf( Node * pNode )
{
	return static_cast< Node * >( BinaryTree::NextLeaf( pNode ) );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node const * DataTree::NextLeaf( Node const * pNode ) const
{
	return static_cast< Node const * >( BinaryTree::NextLeaf( pNode ) );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node * DataTree::Node::Parent()
{
	return static_cast< Node * >( m_pParent );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node const * DataTree::Node::Parent() const
{
	return static_cast< Node const * >( m_pParent );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node * DataTree::Node::LeftChild()
{
	return static_cast< Node * >( m_pLeftChild );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node const * DataTree::Node::LeftChild() const
{
	return static_cast< Node const * >( m_pLeftChild );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node * DataTree::Node::RightChild()
{
	return static_cast< Node * >( m_pRightChild );
}


/********************************************************************************************************************/
/*																													*/
/*																													*/
/********************************************************************************************************************/

DataTree::Node const * DataTree::Node::RightChild() const
{
	return static_cast< Node const * >( m_pRightChild );
}


